---
description:
globs:
alwaysApply: true
---
# コーディングガイドライン

## 基本原則
- Kotlinスタイルガイドに準拠する。
- ドメイン駆動設計(DDD)とクリーンアーキテクチャに基づく階層構造を採用。
- SOLID原則に準拠する。
- ViewModelではMVIパターンで状態管理を行う。
- すべての公開（public）なクラス、メソッド、プロパティにKDocを記載する。
- 依存関係の方向：UI層 → アプリケーション層 → ドメイン層 → インフラストラクチャ層。
- 各層の責務を明確に分離し、上位層が下位層に依存しないよう設計する。
- 共通モジュールはcommonMainに配置し、プラットフォーム固有は各Mainに分離。

## 関数・メソッド
- 関数名は必ず動詞＋目的語で命名する。
- 早期リターンを活用し、ネストを避ける。
- 高階関数を活用する。
- デフォルト引数を活用し、nullチェックを減らす。

## テスト
- テストコードも本ガイドラインに準拠する。
- Arrange-Act-Assert（準備-実行-検証）の構造で記述。
- 依存関係はテストダブル（モック、スタブ、フェイク）で代用。
- ドメインレイヤーのカバレッジは最低80%を目標とする。

---